[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "opentelemetry-opensafely"
description = "OpenSAFELY opentelemetry utils"
readme = "README.md"
authors = [{name = "OpenSAFELY", email = "tech@opensafely.org"}]
license = {file = "LICENSE"}
classifiers = [
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]
requires-python = ">=3.8"
dependencies = [
  "opentelemetry-sdk",
]
dynamic = ["version"]

[project.urls]
Source = "https://github.com/opensafely-core/opentelemetry-opensafely"


[tool.setuptools.packages.find]
include = ["otel_opensafely*"]

[tool.setuptools.dynamic]
version = {file = "version"}

[tool.coverage.run]
branch = true
dynamic_context = "test_function"
omit = [
  ".venv/*",
]
source = [
  "otel_opensafely",
  "tests",
]

[tool.coverage.report]
fail_under = 100
skip_covered = true
show_missing = true

[tool.coverage.html]
show_contexts = true

[tool.pytest.ini_options]

[tool.ruff]
line-length = 88
exclude = [
  ".direnv",
  ".git",
  ".github",
  ".ipynb_checkpoints",
  ".pytest_cache",
  ".venv",
  "__pycache__",
  "docker",
  "htmlcov",
  "venv",
]

[tool.ruff.lint]
# See: https://docs.astral.sh/ruff/rules/
extend-select = [
  "A", # prevent shadowing builtins
  "COM818", # no trailing commas on bare tuples
  "I",  # isort
  "INP",  # no implicit namespace packages
  "ISC",  # flake8-implicit-str-concat
  "UP",  # pyupgrade
  "W",  # pycodestyle warning
]
extend-ignore = [
  "E501", # ignore line length
]
isort.lines-after-imports = 2
